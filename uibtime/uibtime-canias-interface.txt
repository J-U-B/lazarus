Vorschlag Definition der uibtime-canias Schnittstelle

Daten von uibtime zu canias:

Die Abrechnungsdaten aus dem uibtime werden in folgender Tabelle bereitgestellt:
----------------------------------------
table uibaccountexport
  acc_exp_id     Integer     // automatisch erzeugte Datensatz ID (Primary Key)
  event          varchar(50) // uibtime name
  fromday        date        // Startdatum des Abrechnungszeitraums (inclusive)
  untilday       date        // Enddatum des Abrechnungszeitraums (inclusive),
  stunden        float       // Gesamtzahl der angefallenen Stunden 
                               (inclusive Freistunden),
                                als Fließkomma Wert der Stunden (0,5 = 30 Minuten).
  inerp          (0/1)       // Boolsches Flag, 0= false,
                                1=ist erfolgreich in Canias eingelesen,
                                Ist beim Import durch canias immer 0
                                muss durch Canias bei Erfolg dann auf 1 gesetzt werden.
  erperror       (0/1)       // Boolsches Flag, 0= false,
                                1=Konnte nicht in eingelesen werden
                                Ist beim Import durch canias immer 0
                                muss durch Canias bei Fehler dann auf 1 gesetzt werden.
----------------------------------------

Diese Tabelle wird durch eine JSON Webschnittstelle bereit gestellt.
Es sollten die Datensätze eingelesen werden,
bei denen gilt:
(inerp=0) and (erperror=0)

----------------------------------------
----------------------------------------
Daten von uibtime zu canias:

Update der Tabelle uibaccountexport nach Einlesen der Datensätze:

Übergeben werden die Daten:
Table: uibaccountexport
Werte: acc_exp_id= (Eingelesene ID)
       inerp = (Erfolg=1, sonst=0)
       erperror = (Fehler=1, sonst=0)

Entsprechend dem SQL Statement:
Update uibaccountexport 
set inerp=(0/1 von Canias), erperror=(0/1 von Canias)
where acc_exp_id= (ID von Canias)

----------------------------------------
Update der Tabelle uibaktevent bei 
neuem oder geänderten Supportvertrag:

Die Tabelle uibaktevent hat folgende relevanten Felder:
  EVENT Varchar(50)      // uibtime name
  "COMMENT" Varchar(500)   // Optional: Vorschlag Kunden Nummer,
  ID_STRING Varchar(50)    // Optional: Vorschlag Vertrags Nummer,
  TIME_H Float             // Stunden pro Abrechnungszeitraum,
  PROJECTSTART Timestamp   // Start des Abrechnungszeitraums,
  REPORTREQUIRED (0/1)     // Tätigkeitsbericht erforderlich
  ACC_PER_MONTHNUM Float   // Abrechnungszeitraum in Monaten
  ACCOUNTINGREQUIRED (0/1) // Abrechnung erforderlich 
  
Bei einem neuen Vertrag oder bei einer Änderung des Vertrags
müssen diese Daten von Canias an das uibtime übermittelt werden.
Diese Übermittlung muß zum Vertragsbeginn (-Änderung) erfolgen.
Der Datensatz (bzw. die Datensatzänderung) wird im uibtime sofort gültig.

Notiz für uib (Miriam):
Die folgenden oben nicht genannten Felder 
der Tabelle werden bei Insert und Update
durch den Webservice wie folgt gesetzt werden:

  PARENTEVENT Varchar(50) = 'opsi-Support'
  BASE_FOR_TIME Varchar(50) = '' (depricated - wird irgendwann gelöscht)
  
---------------------------------------------------------
---------------------------------------------------------

Zur Diskussion:

Soll die vom uibtime verwendeten boolschen Flgas (0/1) durch den Webservice 
als Boolean (false/true) übersetzt werden ?

Sollen wir in der Tabelle uibaktevent die Felder COMMENT und ID_STRING
wie vorgeschlagen verwenden ?

Soll in uibaccountexport das Feld:
untilday       date        // Enddatum des Abrechnungszeitraums 
inclusiv oder exclusiv sein ?
Beispiel Abrechnung Januar: 
untilday inclusive 1.1.2016 - 31.1.2016
untilday exclusive 1.1.2016 - 1.2.2016
Exclusive hat den Vorteil das leicht auf Lücken geprüft werden kann:
Ein neues fromday sollte schon als untilday existieren. 
Wenn nicht ist dies entweder der erste Datensatz zu diesem event
oder wir haben eine Lücke.
Nachteil: zur Darstellung nach aussen wird man üblicherweise einen Tag abziehen

