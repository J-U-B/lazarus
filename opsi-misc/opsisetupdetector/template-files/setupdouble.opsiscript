; ----------------------------------------------------------------
; Copyright (c) uib gmbh (www.uib.de)
; This sourcecode is owned by uib
; and published under the Terms of the General Public License.
; ----------------------------------------------------------------

[Actions]
requiredWinstVersion >= "4.12.0.28"
ScriptErrorMessages = false

DefVar $ProductId$
DefVar $InstallDir$
DefVar $InstallDir1$
DefVar $InstallDir2$
DefVar $MinimumSpace$
DefVar $ExitCode$
DefVar $ErrorString$
DefVar $LicenseRequired$
DefVar $LicenseKey$
DefVar $LicensePool$
DefVar $MsiId1$
DefVar $MsiId2$
DefVar $LogDir$
DefVar $OS$
DefVar $oldProgFound$
DefVar $arch$
DefVar $mode$

Set $arch$ = GetSystemType
set $mode$ = GetProductProperty("install_architecture","system specific")
Set $LogDir$ = "%opsiLogDir%"

; import complete file !
importlib "uib_exitcode.opsiscript"
importlib "%scriptpath%\osd-lib.opsiscript"
#@importLibs*#

; ----------------------------------------------------------------
; $ProductId$ is the name of the product in opsi, only lower letters, no umlauts, no white spaces, use '-' as a seperator
Set $ProductId$       = "#@productId*#"
; the path where we find the product after the installation
Set $InstallDir1$      = "#@InstallDir1*#"
Set $InstallDir2$      = "#@InstallDir2*#"
Set $LicenseRequired$ = "#@LicenseRequired*#"
Set $LicensePool$     = "p_" + $ProductId$
Set $MsiId$           = "#@MsiId1*#"
Set $MinimumSpace$    = "#@MinimumSpace*#"
; ----------------------------------------------------------------

set $OS$ = GetOS

if not(($OS$ = "Windows_NT"))
   logError "Installation aborted: wrong OS version: only Windows"
   isFatalError "wrong OS"
endif

if not(HasMinimumSpace ("%SystemDrive%", $MinimumSpace$))
   LogError "Not enough space on %SystemDrive%, " + $MinimumSpace$ + " on drive %SystemDrive% needed for " + $ProductId$
   isFatalError "No Space"
   ; Stop process and set installation status to failed
endif

comment "Show product picture"
ShowBitmap "%ScriptPath%\" + $ProductId$ + ".png" $ProductId$

if FileExists("%ScriptPath%\delsub.opsiscript")
   comment "Start uninstall sub section"
   Sub "%ScriptPath%\delsub.opsiscript"
endif

Message "Installing " + $ProductId$ + " ..."

if $LicenseRequired$ = "true"
   comment "Licensing required, reserve license and get license key"
   set $LicenseKey$ = get_licensekey_byPool($LicensePool$)
endif

if (($arch$ = "x86 System") and ($mode$ = "system specific")) or ($arch$ = "both") or ($arch$ = "32 only")
   comment "Start Pre Install hook (may be empty):"
   #@preInstallLines1*#
   
   comment "Start setup program"
   ChangeDirectory "%SCRIPTPATH%"
   ;----------------------------------------------
   Winbatch_install_1
   ;----------------------------------------------
   sub_check_exitcode_1
   
   comment "Start Post Install hook (may be empty):"
   #@postInstallLines1*#
endif

if ($arch$ = "64 Bit System") and (($mode$ = "system specific") or ($mode$ = "both") or ($mode$ = "64 only"))
   comment "Start Pre Install hook (may be empty):"
   #@preInstallLines2*#
   
   comment "Start setup program"
   ChangeDirectory "%SCRIPTPATH%"
   ;----------------------------------------------
   Winbatch_install_2
   ;----------------------------------------------
   sub_check_exitcode_2
   
   comment "Start Post Install hook (may be empty):"
   #@postInstallLines2*#
endif

[Winbatch_install_1]
#@installCommandLine1*#

[Winbatch_install_2]
#@installCommandLine2*#


[sub_check_exitcode_1]
set $ExitCode$ = getlastexitcode
if stringtobool(#@isExitcodeFatalFunction1*#($exitcode$, "true", $ErrorString$ ))
   LogError $ErrorString$
   isfatalerror $ErrorString$
else
   Comment $ErrorString$
endif

[sub_check_exitcode_2]
set $ExitCode$ = getlastexitcode
if stringtobool(#@isExitcodeFatalFunction2*#($exitcode$, "true", $ErrorString$ ))
   LogError $ErrorString$
   isfatalerror $ErrorString$
else
   Comment $ErrorString$
endif

; ----------------------------------------------------------------
; ----------------------------------------------------------------

