; ----------------------------------------------------------------
; Copyright (c) uib gmbh (www.uib.de)
; This sourcecode is owned by uib
; and published under the Terms of the General Public License.
; credits: http://www.opsi.org/en/credits/
; ----------------------------------------------------------------

;****************************************
; SETUPTYPE      #@#-SETUPTYPE-#@#
;****************************************
; PRODUCTID      #@#-PRODUCTID-#@#
; SETUPFILE      #@#-SETUPFILE-#@#
;****************************************
; LICENSE        #@#-LICENSE-#@#     
; PRODUCTDESC    #@#-PRODUCTDESC-#@#
; PRODUCTNAME    #@#-PRODUCTNAME-#@#
; PRODUCTSIZE    #@#-PRODUCTSIZE-#@#
; PRODUCTVER     #@#-PRODUCTVER-#@#
;****************************************
; SETUPSCRIPT    #@#-SETUPSCRIPT-#@#
; UNINSSCRIPT    #@#-UNINSSCRIPT-#@#
;****************************************
; MSIID          #@#-MSIID-#@#
; USE-MST        #@#-USE-MST-#@#
; INSTALLDIR     #@#-INSTALLDIR-#@#
;****************************************
; TIMESTAMP      #@#-TIMESTAMP-#@#
;****************************************

[Actions]
requiredWinstVersion >= "4.12.0.28"
ScriptErrorMessages = false

DefVar $SetupType$
DefVar $ProductId$ 
DefVar $Setupfile$ 
DefVar $InstallDir$
DefVar $MinimumSpace$
DefVar $ExitCode$
DefVar $ErrorMsg$
DefVar $LicenseRequired$
DefVar $LicenseKey$
DefVar $LicensePool$
DefVar $MsiId$
DefVar $NsisInstallBatch$
DefVar $LogDir$
DefVar $OS$

Set $LogDir$ = "%opsiLogDir%"

"#@#-IMPORTLIB-#@#"

; ----------------------------------------------------------------
Set $SetupType$       = "#@#-SETUPTYPE-#@#"
; ----------------------------------------------------------------

; $ProductId$ is the name of the product in opsi, only lower letters, no umlauts, no white spaces, use '-' as a seperator
Set $ProductId$       = "#@#-PRODUCTID-#@#"
Set $Setupfile$       = "#@#-SETUPFILE-#@#"
; the path where we find the product after the installation
Set $InstallDir$      = "#@#-INSTALLDIR-#@#"
Set $LicenseRequired$ = "#@#-LICENSE-#@#"
Set $LicensePool$     = "p_" + $ProductId$
Set $MsiId$           = "#@#-MSIID-#@#"
Set $MinimumSpace$    = "#@#-PRODUCTSIZE-#@#"
; ----------------------------------------------------------------
; ----------------------------------------------------------------

set $OS$ = GetOS

if not(HasMinimumSpace ("%SystemDrive%", $MinimumSpace$))
   LogError "Not enough space on %SystemDrive%, " + $MinimumSpace$ + " on drive %SystemDrive% needed for " + $ProductId$
   isFatalError "No Space"
   ; Stop process and set installation status to failed
endif


comment "Show product picture"
ShowBitmap "%ScriptPath%\" + $ProductId$ + ".png" $ProductId$

if FileExists("%ScriptPath%\delsub.opsiscript")
   comment "Start uninstall sub section"
   Sub "%ScriptPath%\delsub.opsiscript"
endif

Message "Installing " + $ProductId$ + " ..."

if $LicenseRequired$ = "true"
   comment "Licensing required, reserve license and get license key"
   Sub_get_licensekey
endif

; **--** PATCH_NSIS **--** --begin-- (do not change this line)
if ($SetupType$ = "nsis")
   Set $NsisInstallBatch$ = "%ScriptPath%\#@#-SETUPFILE-#@# /S"
   if not ($InstallDir$ = '')
      Set $NsisInstallBatch$ = $NsisInstallBatch$ + ' /D="' + $InstallDir$ + '"'
   endif
endif
; **--** PATCH_NSIS **--** --end-- (do not change this line)

#@#-PREINSTALL-LINE-#@#
#@#-PREINSTALL-INCLUDE-#@#

comment "Start setup program"
ChangeDirectory "%SCRIPTPATH%"
;----------------------------------------------
Winbatch_install #@#-WINBATCH-ARGUMENT-#@#
;----------------------------------------------
Sub_check_exitcode	

#@#-POSTINSTALL-LINE-#@#
#@#-POSTINSTALL-INCLUDE-#@#


[[Winbatch_install]
#@#-INSTALL-LINE-#@#

; ----------------------------------------------------------------
; install section
; ----------------------------------------------------------------
; **--** PATCH_MSI **--** --begin-- (do not change this line)

[Winbatch_install_msi]
msiexec /i "%ScriptPath%\#@#-SETUPFILE-#@#" #@#-USE-MST-#@# /l* "$LogDir$\$ProductId$.install_log.txt" /qb! ALLUSERS=1 REBOOT=ReallySuppress

; **--** PATCH_MSI         **--** --end--   (do not change this line)
; **--** PATCH_ADVANCEDMSI **--** --begin-- (do not change this line)

[Winbatch_install_advancedmsi]
;"%ScriptPath%\#@#-SETUPFILE-#@#"  /exenoupdates /exenoui /exelog "$LogDir$\$ProductId$.install_log.txt" /qb! ALLUSERS=1 REBOOT=ReallySuppress
"%ScriptPath%\#@#-SETUPFILE-#@#" /qb! ALLUSERS=1 REBOOT=ReallySuppress

; **--** PATCH_ADVANCEDMSI **--** --end--   (do not change this line)
; **--** PATCH_INNO        **--** --begin-- (do not change this line)

[Winbatch_install_inno]
; http://unattended.sourceforge.net/InnoSetup_Switches_ExitCodes.html
; You may create setup answer file by: setup.exe /SAVEINF="filename"
; You may use an answer file by the parameter /LOADINF="filename"
"%ScriptPath%\#@#-SETUPFILE-#@#" /sp- /silent /norestart /nocancel /SUPPRESSMSGBOXES

; **--** PATCH_INNO          **--** --end--   (do not change this line)
; **--** PATCH_INSTALLSHIELD **--** --begin-- (do not change this line)

[Winbatch_install_installshield]
; Create setup.iss answer file by running: setup.exe /r /f1"c:\setup.iss"
; You may use an answer file by the parameter /f1"c:\setup.iss"
;"%ScriptPath%\setup.exe" /s /w /f1 "c:\setup.iss"  /f2"$LogDir$\$ProductId$.install_log.txt"
"%ScriptPath%\#@#-SETUPFILE-#@#" /s /w /f2"$LogDir$\$ProductId$.install_log.txt"

; **--** PATCH_INSTALLSHIELD    **--** --end--   (do not change this line)
; **--** PATCH_INSTALLSHIELDMSI **--** --begin-- (do not change this line)

[Winbatch_install_installshieldmsi]
; "%ScriptPath%\#@#-SETUPFILE-#@#" /s /v" l* \"$LogDir$\$ProductId$.install_log.txt\" /qb! ALLUSERS=1 REBOOT=ReallySuppress"
; Spaces in the path to the logfile cause problems, so better no logfile:
"%ScriptPath%\#@#-SETUPFILE-#@#" /s /v" /qb! ALLUSERS=1 REBOOT=ReallySuppress"

; **--** PATCH_INSTALLSHIELDMSI **--** --end--   (do not change this line)
; **--** PATCH_NSIS             **--** --begin-- (do not change this line)

[Winbatch_install_nsis]
;NSIS Nullsoft Scriptable Install System 
$NsisInstallBatch$

; **--** PATCH_NSIS             **--** --end--   (do not change this line)
; ----------------------------------------------------------------


[Sub_get_licensekey]
if opsiLicenseManagementEnabled
   comment "License management is enabled and will be used"

   comment "Trying to get a license key"
   Set $LicenseKey$ = demandLicenseKey ($LicensePool$)
   ; If there is an assignment of exactly one licensepool to the product the following call is possible:
   ; Set $LicenseKey$ = demandLicenseKey ("", $ProductId$)
   ;
   ; If there is an assignment of a license pool to a windows software id, it is possible to use:
   ; DefVar $WindowsSoftwareId$
   ; $WindowsSoftwareId$ = "..."
   ; Set $LicenseKey$ = demandLicenseKey ("", "", $WindowsSoftwareId$)

   DefVar $ServiceErrorClass$
   set $ServiceErrorClass$ = getLastServiceErrorClass
   comment "Error class: " + $ServiceErrorClass$
   
   if $ServiceErrorClass$ = "None"
      comment "Everything fine, we got the license key '" + $LicenseKey$ + "'"
   else
      if $ServiceErrorClass$ = "LicenseConfigurationError"
         LogError "Fatal: license configuration must be corrected"
         LogError getLastServiceErrorMessage
         isFatalError
      else 
         if $ServiceErrorClass$ = "LicenseMissingError"
            LogError "Fatal: required license is not supplied"
            isFatalError
         endif
      endif
   endif
else
   LogError "Fatal: license required, but license management not enabled"
   isFatalError
endif

; ----------------------------------------------------------------
; ----------------------------------------------------------------

